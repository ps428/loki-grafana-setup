services:
  reverse-proxy: # traefik container
    image: traefik:v3.1
    command:
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.prodResolver.acme.tlschallenge=true"
      - "--certificatesresolvers.prodResolver.acme.email=pranav.bhawan@gmail.com"
      - "--certificatesresolvers.prodResolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure" # forward http to https
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

  frontend:
    build:
      context: ./apps/frontend
    depends_on:
      - backend
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${GF_SERVER_DOMAIN}`) && !PathPrefix(`/api`) && !PathPrefix(`/grafana`)" # for domains other than `/api` and `/grafana`
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=prodResolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

    restart: always

  backend:
    build:
      context: ./apps/backend
    networks:
      - monitoring
    command: "uvicorn main:app --host 0.0.0.0 --port 8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${GF_SERVER_DOMAIN}`) &&PathPrefix(`/api`)" # look only for `/api` domain
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=prodResolver"
      - "traefik.http.routers.backend.middlewares=strip-api-prefix"
      - "traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

    restart: always

  loki:
    image: grafana/loki:latest
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yml
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./loki/promtail-config.yml:/etc/promtail/config.yml
    command:
      - -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_GITHUB_ENABLED=true
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}/grafana
      - GF_SERVER_DOMAIN=${GF_SERVER_DOMAIN}
      - GF_AUTH_GITHUB_CLIENT_ID=${GF_AUTH_GITHUB_CLIENT_ID}
      - GF_AUTH_GITHUB_CLIENT_SECRET=${GF_AUTH_GITHUB_CLIENT_SECRET}
      - GF_AUTH_GITHUB_SCOPES=user:email,read:org
      - GF_AUTH_GITHUB_AUTH_URL=https://github.com/login/oauth/authorize
      - GF_AUTH_GITHUB_TOKEN_URL=https://github.com/login/oauth/access_token
      - GF_AUTH_GITHUB_API_URL=https://api.github.com/user
      - GF_AUTH_GITHUB_ALLOW_SIGN_UP=true
      - GF_AUTH_GITHUB_ALLOWED_ORGANIZATIONS=${GITHUB_ORGANIZATION}
      - GF_AUTH_GITHUB_ROLE_ATTRIBUTE_PATH=[login=='ps428' || login=='other_github_id'] && 'Admin' || 'Viewer'
    depends_on:
      - loki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${GF_SERVER_DOMAIN}`) &&PathPrefix(`/grafana`)" # look only for `/grafana` domain
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=prodResolver"
      - "traefik.http.routers.grafana.middlewares=strip-grafana-prefix"
      - "traefik.http.middlewares.strip-grafana-prefix.stripprefix.prefixes=/grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge
